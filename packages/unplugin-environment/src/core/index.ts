import path from "path";
import { fileURLToPath } from "url";
import type { Options } from "@/types";
import { config as dotenvConfig } from "dotenv";
import type { UnpluginFactory } from "unplugin";
import * as Core from "./core";
/**
 * NOTE:
 * Vite not load env file automatically until user set configuration for env.
 * So, we load all env file here (with `dotenv` package) and filter by our options.
 */
export const unpluginFactory: UnpluginFactory<Options> = (o) => {
	dotenvConfig();
	const options = Core.getOptions(o);
	const env = process.env as Record<string, string>;
	/**
	 * This writer function not BETTER implementation
	 */
	const writer = () =>
		import("fs/promises").then(async (fs) => {
			fs.writeFile(
				path.resolve(path.dirname(fileURLToPath(import.meta.url)), "env.d.ts"),
				[
					"// DO NOT EDIT THIS FILES",
					"// THIS FILE IS GENERATE FROM `unplugin-environment` - see https://npm.im/unplugin-environment",
					"",
					Core.createModuleDTS(options),
				].join("\n"),
			);
		});

	return {
		name: "unplugin-environment",
		enforce: "pre",
		resolveId: Core.resolveId(options),
		load: Core.load(env, options),
		// TODO: make watch function internally in Core.*
		buildStart() {
			writer().catch((e) => {
				console.error(
					`[unplugin-environment] ${e?.message || "something went wrong"}`,
				);
			});
		},
	};
};
